name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  APP_JAVA_VERSION: 17

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 1
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.APP_JAVA_VERSION }}
          cache: 'gradle'
      - name: Set gradlew executable
        run: chmod +x ./gradlew
      - name: Build project
        uses: gradle/gradle-build-action@v2
        with:
          arguments: assemble

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 1
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.APP_JAVA_VERSION }}
          cache: 'gradle'
      - name: Set gradlew executable
        run: chmod +x ./gradlew
      - name: Run tests
        uses: gradle/gradle-build-action@v2.0-beta.4
        with:
          arguments: test
      - name: Generate JaCoCo report
        uses: gradle/gradle-build-action@v2.0-beta.4
        if: always()
        with:
          arguments: jacocoTestReport
      - uses: check-run-reporter/action@v2.7.1
        if: always()
        with:
          token: ${{ secrets.CHECK_RUN_REPORTER_TOKEN }}
          report: 'build/test-results/test/*.xml'
      - name: Publish coverage on CodeCov
        uses: codecov/codecov-action@v2
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: build/reports/jacoco/test/jacocoTestReport.xml
          flags: unittests
          name: codecov-github-actions
      - name: Upload JUnit reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: junit-test-results
          path: |
            build/test-results/test/*.xml
            build/reports/tests/tests
          if-no-files-found: error
          retention-days: 14
      - name: Upload JaCoCo reports
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: jacoco-test-results
          path: |
            build/reports/jacoco/test/*.xml
            build/reports/jacoco
          if-no-files-found: error
          retention-days: 14

  publish:
    name: Publish on DockerHub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout source
        uses: actions/checkout@v2.3.5
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ env.APP_JAVA_VERSION }}
          cache: 'gradle'
      - name: Set gradle permissions
        run: chmod +x gradlew
      - name: Publish project
        uses: gradle/gradle-build-action@v2
        with:
          arguments: |
            jib
            -PdockerUsername=${{ secrets.DOCKER_USERNAME }}
            -PdockerPassword=${{ secrets.DOCKER_TOKEN }}